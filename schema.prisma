generator client {
    provider      = "prisma-client-js"
    previewFeatures = ["queryCompiler", "driverAdapters"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// ========= Models ========

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  role  String  @default("USER") // Novo campo adicionado
}

// ######### User #########
// model User {
//     id             Int       @id @default(autoincrement())
//     email          String    @unique
//     role           UserRole  @default(Member)
//     daily          DateTime?
//     sequence_daily Int       @default(0)
//     vip            DateTime?
//     job_id         Int?

//     // üîó Relations
//     profile          Profile?
//     transactions     UserTransaction[]
//     raffles          UserRaffle[]
//     guilds           UserGuild[]
//     guilds_owner     Guild[]
//     coins            UserCoin[]
//     jobs             UserJob[]
//     boxes            UserBox[]
//     orders           Order[]
//     brokers          Broker[]
//     identities       Identity[]
//     coins_created    Coin[]
//     games            Game[]
//     raffles_won      Raffle[]
//     reminders        Reminder[]
//     follows_given    Follow[]          @relation("FollowingRelation") // usu√°rios que este segue
//     follows_received Follow[]          @relation("FollowedRelation") // usu√°rios que seguem este
//     bans_created     Ban[]             @relation("BanAuthor") // bans feitos por este user
//     bans_received    Ban[]             @relation("BanTarget") // bans recebidos
//     job              Job?              @relation(fields: [job_id], references: [id])
// }

// // ######### Profile #########
// model Profile {
//     id         Int     @id @default(autoincrement())
//     user_id    Int     @unique
//     aura       Int     @default(0)
//     background String?
//     color      String?
//     font       String?
//     pet        String?

//     // Relations
//     user User @relation(fields: [user_id], references: [id])
// }

// // ######### Coin #########
// model Coin {
//     id        Int    @id @default(autoincrement())
//     onwner_id Int
//     name      String @unique
//     symbol    String @unique
//     volume    Int // Quantidade total de moedas dispon√≠veis

//     // Relations
//     games       Game[]
//     brokers     Broker[]
//     users       UserCoin[]
//     transations UserTransaction[]
//     owner       User              @relation(fields: [onwner_id], references: [id])
// }

// model UserCoin {
//     id      Int @id @default(autoincrement())
//     user_id Int
//     coin_id Int
//     balance Int @default(0)

//     // Relations
//     user User @relation(fields: [user_id], references: [id])
//     coin Coin @relation(fields: [coin_id], references: [id])
// }

// // ######### Job #########
// model Job {
//     id       Int      @id @default(autoincrement())
//     name     String
//     mission  String
//     wage     Int
//     price    Int
//     cooldown DateTime

//     // Relations
//     user_jobs UserJob[] // Trabalhos de determinado usu√°rio
//     users     User[] // Usu√°rios de determinado trabalho
// }

// model UserJob {
//     user_id    Int
//     job_id     Int
//     level      Int  @default(0)
//     experience Int  @default(0)
//     user       User @relation(fields: [user_id], references: [id])
//     job        Job  @relation(fields: [job_id], references: [id])

//     @@id([user_id, job_id])
// }

// // ######### Box #########
// model Box {
//     id           Int      @id @default(autoincrement())
//     box_group_id Int
//     amount       Int
//     award        Award    @default(Money)
//     box_group    BoxGroup @relation(fields: [box_group_id], references: [id])

//     // Relations
//     selections UserBox[]
// }

// model UserBox {
//     user_id Int
//     box_id  Int

//     // Relations
//     user User @relation(fields: [user_id], references: [id])
//     box  Box  @relation(fields: [box_id], references: [id])

//     @@id([user_id, box_id])
// }

// model BoxGroup {
//     id     Int     @id @default(autoincrement())
//     rarity RareBox @default(Normal)

//     // Relations
//     boxes Box[]
// }

// // ######### Raffle #########
// model Raffle {
//     id             Int        @id @default(autoincrement())
//     winner_id      Int?
//     last_raffle_id Int?       @unique
//     tickets        Int        @default(0)
//     weekly_updates Int        @default(0)
//     weekly_views   Int        @default(0)
//     type           RaffleType @default(Normal)
//     end_at         DateTime
//     created_at     DateTime   @default(now())
//     winner         User?      @relation(fields: [winner_id], references: [id])

//     // Relations
//     participants UserRaffle[]
// }

// model UserRaffle {
//     user_id   Int
//     raffle_id Int
//     tickets   Int @default(0)

//     // Relations
//     user   User   @relation(fields: [user_id], references: [id])
//     raffle Raffle @relation(fields: [raffle_id], references: [id])

//     @@id([user_id, raffle_id])
// }

// // ######### Ban #########
// model Ban {
//     id         Int      @id @default(autoincrement())
//     user_id    Int
//     author_id  Int
//     reason     String
//     image      String?
//     end_at     DateTime
//     created_at DateTime @default(now())

//     // Relations
//     user   User @relation("BanTarget", fields: [user_id], references: [id])
//     author User @relation("BanAuthor", fields: [author_id], references: [id])
// }

// // ######### Game #########
// model Game {
//     id                Int      @id @default(autoincrement())
//     user_id           Int
//     coin_id           Int
//     name              String   @unique
//     matches           Int      @default(0)
//     win               Int      @default(0)
//     lose              Int      @default(0)
//     sequence_win      Int      @default(0)
//     sequence_lose     Int      @default(0)
//     max_win_sequence  Int      @default(0)
//     max_lose_sequence Int      @default(0)
//     coin_earned       Int      @default(0)
//     coin_lost         Int      @default(0)
//     last_match        DateTime @updatedAt
//     created_at        DateTime @default(now())

//     // Relations
//     user User @relation(fields: [user_id], references: [id])
//     coin Coin @relation(fields: [coin_id], references: [id])

//     @@unique([name, user_id, coin_id])
// }

// // ######### Transation #########
// model Transation {
//     id         Int      @id @default(autoincrement())
//     coin_id    Int
//     amount     Int // Valor Total da transa√ß√£o
//     type       String
//     created_at DateTime @default(now())

//     // Relations
//     participants UserTransaction[]
// }

// model UserTransaction {
//     user_id        Int
//     transaction_id Int
//     amount         Int // Valor individual da transa√ß√£o
//     balance_after  Int
//     balance_before Int
//     coin_id        Int // Moeda usada na transa√ß√£o

//     // Relations
//     coin        Coin       @relation(fields: [coin_id], references: [id])
//     user        User       @relation(fields: [user_id], references: [id])
//     transaction Transation @relation(fields: [transaction_id], references: [id])

//     @@id([user_id, transaction_id])
// }

// // ######### Broker #########
// model Broker {
//     id      Int @id @default(autoincrement())
//     name    Int
//     user_id Int
//     amount  Int
//     balance Int // Saldo inicial
//     coin_id Int // Moeda usada

//     // Relations
//     coin Coin @relation(fields: [coin_id], references: [id])
//     user User @relation(fields: [user_id], references: [id])

//     @@unique([name, user_id])
// }

// // ######### Guild #########
// model Guild {
//     id       Int       @id @default(autoincrement())
//     vip      DateTime?
//     owner_id Int

//     // Relations
//     owner    User        @relation(fields: [owner_id], references: [id])
//     channels Channel[]
//     members  UserGuild[]
// }

// model UserGuild {
//     guild_id Int
//     user_id  Int

//     // Relations
//     user  User  @relation(fields: [user_id], references: [id])
//     guild Guild @relation(fields: [guild_id], references: [id])

//     @@id([guild_id, user_id])
// }

// // ######### Channels #########
// model Channel {
//     id           Int     @id @default(autoincrement())
//     lock         Boolean @default(false)
//     message_lock String?
//     event_id     Int?
//     guild_id     Int

//     // Relations
//     guild Guild  @relation(fields: [guild_id], references: [id])
//     event Event? @relation(fields: [event_id], references: [id])
// }

// // ######### Events #########
// model Event {
//     id       Int      @id @default(autoincrement())
//     name     String   @unique
//     cooldown DateTime

//     // Relations
//     channels Channel[]
// }

// // ######### Category #########
// model Category {
//     id          Int    @id @default(autoincrement())
//     name        String @unique
//     description String
//     theme       String @default("#FFF")

//     // Relations
//     products Product[]
// }

// // ######### Product #########
// model Product {
//     id          Int    @id @default(autoincrement())
//     amount      Int
//     price       String
//     category_id Int

//     // Relations
//     category Category @relation(fields: [category_id], references: [id])
//     orders   Order[]
// }

// // ######### Order #########
// model Order {
//     id          Int @id @default(autoincrement())
//     user_id     Int
//     connection  Int // Identifica√ß√£o da conex√£o websocket
//     product_id  Int
//     transfer_id Int // Identifica√ß√£o para pagamentos via PIX

//     // Relations
//     user    User    @relation(fields: [user_id], references: [id])
//     product Product @relation(fields: [product_id], references: [id])
// }

// // ######### Reminder #########
// model Reminder {
//     id          Int      @id @default(autoincrement())
//     user_id     Int
//     date        DateTime
//     description String?

//     // Relations
//     user User @relation(fields: [user_id], references: [id])
// }

// // ######### Identity #########
// model Identity {
//     id      Int    @id @default(autoincrement())
//     user_id Int
//     ip      String

//     // Relations
//     user User @relation(fields: [user_id], references: [id])
// }

// // ######### Follow #########
// model Follow {
//     id           Int @id @default(autoincrement())
//     following_id Int
//     followed_id  Int

//     // Relations
//     following User @relation("FollowingRelation", fields: [following_id], references: [id])
//     followed  User @relation("FollowedRelation", fields: [followed_id], references: [id])
// }

// // ======= ENUMS =======
// enum UserRole {
//     Admin
//     Staff
//     Member
// }

// enum Award {
//     Money
//     Spin
//     Vip
// }

// enum RareBox {
//     Normal
//     Silver
//     Gold
//     Diamong
//     Mystic
// }

// enum RaffleType {
//     Flash
//     Normal
//     Daily
// }
